name: TrackingApp CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    environment: TrackingAppSecrets

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v3

    - name: Start containers
      run: docker-compose -f ".docker/docker-compose.yml" up -d --build
      env:
        SECRET_KEY: ${{ vars.SECRET_KEY }}
        DEBUG: ${{ vars.DEBUG }}
        DATABASE_NAME: ${{ vars.DATABASE_NAME }}
        DATABASE_USER: ${{ vars.DATABASE_USER }}
        DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}
        DATABASE_HOST: ${{ vars.DATABASE_HOST }}
        DATABASE_PORT: ${{ vars.DATABASE_PORT }}

    - name: Run Tests
      env:
        SECRET_KEY: ${{ vars.SECRET_KEY }}
        DEBUG: ${{ vars.DEBUG }}
        DATABASE_NAME: ${{ vars.DATABASE_NAME }}
        DATABASE_USER: ${{ vars.DATABASE_USER }}
        DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}
        DATABASE_HOST: ${{ vars.DATABASE_HOST }}
        DATABASE_PORT: ${{ vars.DATABASE_PORT }}

      run: docker-compose exec -f ".docker/docker-compose.yml" docker_web_1 python manage.py test main/tests/ -v 2 -s

    - name: Stop containers
      env:
        SECRET_KEY: ${{ vars.SECRET_KEY }}
        DEBUG: ${{ vars.DEBUG }}
        DATABASE_NAME: ${{ vars.DATABASE_NAME }}
        DATABASE_USER: ${{ vars.DATABASE_USER }}
        DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}
        DATABASE_HOST: ${{ vars.DATABASE_HOST }}
        DATABASE_PORT: ${{ vars.DATABASE_PORT }}

      if: always()
      run: docker-compose -f ".docker/docker-compose.yml" down


#        SECRET_KEY: ${{ vars.SECRET_KEY }}
#        DEBUG: ${{ vars.DEBUG }}
#        DATABASE_NAME: ${{ vars.DATABASE_NAME }}
#        DATABASE_USER: ${{ vars.DATABASE_USER }}
#        DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}
#        DATABASE_HOST: ${{ vars.DATABASE_HOST }}
#        DATABASE_PORT: ${{ vars.DATABASE_PORT }}
